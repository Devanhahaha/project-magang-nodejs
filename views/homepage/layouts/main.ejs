<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %> - Company Profile</title>

    <!-- Tambahkan CSS Swiper/AOS di sini -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css"
    />
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet" />

    <link rel="stylesheet" href="/aos/dist/aos.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/homepage/css/style.css" />
    <link rel="stylesheet" href="/homepage/css/profil.css" />
    <link rel="stylesheet" href="/homepage/css/services.css" />
    <link rel="stylesheet" href="/homepage/css/home.css" />
    <link rel="stylesheet" href="/homepage/css/news.css" />
    <link rel="stylesheet" href="/homepage/css/portofolio.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Protest+Guerrilla&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- NAVBAR / HEADER -->
    <%- include('../partials/header') %>

    <!-- KONTEN MASUK DI SINI -->
    <main><%- body %></main>

    <!-- FOOTER -->
    <%- include('../partials/footer') %>

    <!-- SCRIPTS -->
    <%- include('../partials/coba') %>

    <script>
      window.addEventListener("scroll", function () {
        const navbar = document.getElementById("navbar");
        if (window.scrollY > 50) {
          navbar.classList.add("scrolled");
        } else {
          navbar.classList.remove("scrolled");
        }
      });

      //portofolio
      // Contoh data dummy, bisa diganti dinamis
      const projects = [
        {
          title: "Aplikasi Travel Umrah",
          image: "/homepage/images/travel.jpg",
          description:
            "Aplikasi mobile untuk pemesanan paket umrah & haji tawarkan kemudahan bagi para jamaah.",
          tech: ["React", "NodeJS", "MongoDB", "Express", "AWS"],
          contact: "https://wa.me/6281234567890",
        },
        {
          title: "Aplikasi Arsip Digital",
          image: "/homepage/images/arsip digital.jpg",
          description:
            "Aplikasi website untuk pengelolaan arsip digital perusahaan.",
          tech: ["Laravel", "MySQL", "Bootstrap"],
          contact: "https://wa.me/6281234567890",
        },
      ];
    </script>

    <!-- AOS Library -->
    <script src="/aos/dist/aos.js"></script>
    <script>
      AOS.init({
        duration: 1000,
        once: true,
        easing: "ease-in-out",
      });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const eyeIcons = document.querySelectorAll(".fa-eye");
        const modal = document.getElementById("portfolioModal");
        const closeBtn = document.querySelector(".close-modal");

        eyeIcons.forEach((icon) => {
          icon.addEventListener("click", () => {
            document.getElementById("modal-title").innerText = "Detail Proyek";
            document.getElementById("modal-image").src = icon.dataset.image;
            document.getElementById("modal-project-title").innerText =
              icon.dataset.title;
            document.getElementById("modal-description").innerHTML =
              icon.dataset.description;

            const techContainer = document.getElementById("modal-tech-stack");
            techContainer.innerHTML = "";
            icon.dataset.tech.split(",").forEach((item) => {
              const span = document.createElement("span");
              span.innerText = item.trim();
              techContainer.appendChild(span);
            });

            document.getElementById("modal-contact-btn").href =
              icon.dataset.contact;

            modal.style.display = "block";
          });
        });

        closeBtn.onclick = function () {
          modal.style.display = "none";
        };

        window.onclick = function (e) {
          if (e.target == modal) {
            modal.style.display = "none";
          }
        };
      });
    </script>

    <!--swiper team-->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script>
      const ourTeamSwiper = new Swiper(".ourTeamSwiper", {
        slidesPerView: 1.4,
        centeredSlides: true,
        spaceBetween: -60,
        loop: true,
        grabCursor: true,
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
        },
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        on: {
          slideChangeTransitionEnd: function () {
            const slides = document.querySelectorAll(".swiper-slide");
            slides.forEach((slide) => slide.classList.remove("card-active"));
            const activeSlide = document.querySelector(".swiper-slide-active");
            if (activeSlide) {
              activeSlide.classList.add("card-active");
            }
          },
        },
      });

      window.addEventListener("DOMContentLoaded", () => {
        const first = document.querySelector(".swiper-slide-active");
        if (first) first.classList.add("card-active");
      });
    </script>

    <script>
      (function () {
        const deck = document.querySelector(".ourTeamSwiper .swiper-wrapper");
        const slidesAll = Array.from(deck.children);

        // ── Utility untuk mem‑re‑stack tiga kartu teratas ────────────────────────────
        function updateStack() {
          const actives = deck.querySelectorAll(".swiper-slide");
          actives.forEach((el, idx) => {
            el.style.transition = "transform .3s";
            if (idx === 0) {
              el.style.transform = "translate(0,0) scale(1)";
              el.style.zIndex = 4;
            } else if (idx === 1) {
              el.style.transform = "scale(0.95) translateY(15px)";
              el.style.zIndex = 3;
            } else if (idx === 2) {
              el.style.transform = "scale(0.9) translateY(30px)";
              el.style.zIndex = 2;
            } else {
              el.style.transform = "";
              el.style.zIndex = 1;
            }
          });
        }

        // ── Pasang pointer handler pada kartu teratas saja ──────────────────────────
        function attachDrag(card) {
          let startX, startY;
          const maxRotate = 12; // derajat maksimal rotasi
          const throwPx = 120; // jarak ambang utk "lempar keluar"

          function onPointerDown(e) {
            startX = e.clientX;
            startY = e.clientY;
            card.setPointerCapture(e.pointerId);
            card.style.transition = "none";
          }

          function onPointerMove(e) {
            if (startX === undefined) return;
            const dx = e.clientX - startX;
            const dy = e.clientY - startY;
            const rot = dx / maxRotate; // rotasi proporsional
            card.style.transform = `translate(${dx}px,${dy}px) rotate(${rot}deg)`;
          }

          function onPointerUp(e) {
            const dx = e.clientX - startX;
            const abs = Math.abs(dx);
            card.releasePointerCapture(e.pointerId);

            // ——— Kalau geser cukup jauh ⇒ buang kartu ———
            if (abs > throwPx) {
              const dir = dx > 0 ? 1 : -1;
              card.style.transition = "transform .35s ease-out";
              card.style.transform = `translate(${dir * 500}px,0) rotate(${
                dir * 30
              }deg)`;
              // setelah animasi, taruh di belakang deck
              setTimeout(() => {
                deck.appendChild(card);
                card.style.transition = "none";
                card.style.transform = "";
                reInit(); // re‑attach drag utk kartu baru teratas
              }, 400);
            } else {
              // ——— Kurang jauh ⇒ snap back ———
              card.style.transition = "transform .3s ease";
              card.style.transform = "translate(0,0)";
            }
            startX = startY = undefined;
          }

          card.addEventListener("pointerdown", onPointerDown);
          card.addEventListener("pointermove", onPointerMove);
          card.addEventListener("pointerup", onPointerUp);
        }

        // ── Re‑initialise agar handler selalu ada di kartu paling atas ──────────────
        function reInit() {
          updateStack();
          const topCard = deck.querySelector(".swiper-slide");
          attachDrag(topCard);
        }

        // ====  FIRST RUN  ===========================================================
        reInit();
      })();
    </script>
  </body>
</html>
